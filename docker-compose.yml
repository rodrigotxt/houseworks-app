# docker-compose.yml
version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-app
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DB_NAME}?authSource=admin
      JWT_SECRET: ${JWT_SECRET_KEY}
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./backend/.env
    depends_on:
      - mongodb

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend:latest # Imagem para desenvolvimento
    container_name: frontend-app
    ports:
      - "80:3000" # A porta 3000 é a porta padrão do servidor de desenvolvimento do React
    volumes:
      - ./frontend:/app           # Mapeia o código local para o contêiner (ESSENCIAL para hot reload)
      - /app/node_modules         # Garante que os node_modules do contêiner sejam usados
    environment:
      # Variável de ambiente para o frontend saber onde está a API do backend
      REACT_APP_API_URL: http://backend:3000 # O frontend acessa o backend pelo nome do serviço Docker
    depends_on:
      - backend

volumes:
  mongo-data:
